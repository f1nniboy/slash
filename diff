diff --git a/slash b/slash
index 21fbaf7..b994b6e 100755
--- a/slash
+++ b/slash
@@ -495,7 +495,7 @@ pkg_strip() {
 
 # Generate the manifest for a package.
 pkg_manifest() {
-	info "Creating manifest..."
+	info "Creating manifest for '${pkg_name}'..."
 
 	manifest_file="${pkg_root_dir}/${pkg_ins_dir}/${pkg_name}/manifest"
 	
@@ -579,7 +579,7 @@ pkg_build() {
 	# Get the package's version.
 	pkg_get_version "${pkg_dir}"
 
-	info "Starting build..."
+	info "Starting build for '${pkg_name}'..."
 
 	# $1 = package name
 	# $2 = path to build directory
@@ -601,7 +601,7 @@ pkg_build() {
 		DESTDIR="${pkg_root_dir}" \
 		\
 		"${pkg_dir}/build" "${pkg_root_dir}" 2>&1 || {
-			err "Build failed."
+			err "Build for '${pkg_name}' failed."
 			err "Log saved to '${log_file}'."
 
 			# $1 = package name
@@ -624,7 +624,7 @@ pkg_build() {
 	# $2 = path to root directory
 	run_hook "post-build" "${pkg_name}" "${pkg_root_dir}"
 
-	info "Successfully built."
+	info "Successfully built '${pkg_name}'."
 }
 
 # Find the tarball of a built package.
@@ -664,7 +664,7 @@ pkg_tar() {
 	# $2 = path to archive
 	run_hook "post-package" "${pkg_name}" "${tar_file}"
 
-	info "Created tarball."
+	info "Created tarball for '${pkg_name}'."
 }
 
 # Copy files and create directories.
@@ -779,7 +779,16 @@ pkg_conflicts() {
 	# If the file is not empty, indicating that there are 
 	# conflicts, exit.
 	if [ -s "${conflicts}" ]; then
-		die "Conflicts found with another package."
+		err "Conflicts found with another package:"
+		IFS=:
+
+		# Print the conflicts.
+		while read -r manifest conflict; do
+			err "${conflict}"
+		done < "${conflicts}"
+
+		unset IFS
+		die
 	fi
 }
 
@@ -805,7 +814,7 @@ pkg_install() {
 	# $2 = path to extracted package
 	run_hook "pre-install" "${pkg_name}" "${PWD}"
 
-	info "Installing package..."
+	info "Installing '${pkg_name}'..."
 
 	# If the package is already installed and this is an upgrade, make
 	# a backup of the manifest file.
@@ -845,11 +854,11 @@ pkg_install() {
 		run_hook         "post-install" "${pkg_name}"
 		run_package_hook "post-install" "${pkg_name}"
 
-		info "Installed successfully."
+		info "Installed '${pkg_name}' successfully."
 	else
 		pkg_clean
 
-		err "Failed to install package."
+		err "Failed to install '${pkg_name}'."
 		die "The filesystem is now dirty, manual intervention is required."
 	fi
 }
@@ -863,7 +872,7 @@ pkg_remove() {
 	# on the filesystem.
 	trap '' INT
 
-	info "Removing package..."
+	info "Removing '${pkg_name}'..."
 
 	# $1 = package name
 	run_hook "pre-remove" "${pkg_name}"
@@ -874,7 +883,7 @@ pkg_remove() {
 	# Reset 'trap'. We don't need to block '^C' anymore.
 	trap pkg_clean EXIT INT
 
-	info "Removed successfully."
+	info "Removed '${pkg_name}' successfully."
 }
 
 # Check for new package versions and upgrade them if necessary.
@@ -1045,8 +1054,8 @@ args() {
 			info "slash [v|d|b|i|r|s|l]"
 			info "version   =>  View the current version."
 			info "update    =>  Update the repositories."
-			info "download  =>  Download the package's sources."
-			info "build     =>  Build the package."
+			info "download  =>  Download a the sources of a package."
+			info "build     =>  Build a package."
 			info "install   =>  Install a built package."
 			info "remove    =>  Remove an installed package."
 			info "search    =>  Search for a package."
